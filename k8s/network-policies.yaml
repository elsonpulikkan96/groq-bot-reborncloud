---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: chatbot-ui-network-policy
  namespace: chatbot-ui
spec:
  podSelector:
    matchLabels:
      app: chatbot-ui
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from ALB Ingress Controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: aws-load-balancer-controller
    ports:
    - protocol: TCP
      port: 3000
  # Allow ingress from Prometheus for metrics scraping
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: prometheus
    ports:
    - protocol: TCP
      port: 3000
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow HTTPS to OpenAI API
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow access to AWS services (Secrets Manager, etc.)
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow access to Kubernetes API server
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 443
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all-default
  namespace: chatbot-ui
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-monitoring-ingress
  namespace: monitoring
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: prometheus
  policyTypes:
  - Ingress
  ingress:
  # Allow access to Prometheus from Grafana
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: grafana
    ports:
    - protocol: TCP
      port: 9090
  # Allow access from ALB for health checks
  - from: []
    ports:
    - protocol: TCP
      port: 9090
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-grafana-ingress
  namespace: monitoring
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: grafana
  policyTypes:
  - Ingress
  ingress:
  # Allow access from ALB
  - from: []
    ports:
    - protocol: TCP
      port: 3000
