---
apiVersion: v1
kind: Namespace
metadata:
  name: groq-bot
---
# Secret should be created separately with:
# kubectl create secret generic groq-bot-secret -n groq-bot --from-literal=OPENAI_API_KEY="your-groq-api-key"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: groq-bot
  namespace: groq-bot
spec:
  replicas: 3
  selector:
    matchLabels:
      app: groq-bot
  template:
    metadata:
      labels:
        app: groq-bot
    spec:
      containers:
      - name: groq-bot
        image: 739275449845.dkr.ecr.us-east-1.amazonaws.com/groq-bot-clone:v1.1.0
        ports:
        - containerPort: 3000
        env:
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: groq-bot-secret
              key: OPENAI_API_KEY
        - name: OPENAI_API_HOST
          value: "https://api.groq.com/openai"
        - name: DEFAULT_MODEL
          value: "llama-3.1-8b-instant"
        - name: NODE_ENV
          value: "production"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: groq-bot-service
  namespace: groq-bot
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
  selector:
    app: groq-bot
